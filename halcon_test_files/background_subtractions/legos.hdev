<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="12.0.3">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, '/home/mickboe1/Halcon_exports/pieces.jpg')</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">* open_framegrabber ('Video4Linux2', 1, 1, 0, 0, 0, 0, 'progressive', 8, 'default', -1, 'false', 'auto', 'video1', 0, -1, AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">* grab_image_start (AcqHandle, -1)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">* while (true)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">* grab_image_async (Image, AcqHandle, -1)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">* Image Acquisition 01: Do something</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">* endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">* close_framegrabber (AcqHandle)</l>
<c></c>
<l>threshold (Image, IntersectionBlue, 11, 29)</l>
<c></c>
<l>* threshold (Image, IntersectionGreen, 34, 55)</l>
<c></c>
<l>* access_channel (Image, ImageChannel2, 2)</l>
<l>* threshold (ImageChannel2, IntersectionRed, 22, 36)</l>
<c></c>
<l>* access_channel (Image, ImageChannel3, 3)</l>
<l>* threshold (ImageChannel3, IntersectionYellowRed, 13, 42)</l>
<c></c>
<l>gen_circle (Circle, 2, 2, 3)</l>
<l>dilation1 (IntersectionBlue, Circle, RegionDilation1, 4)</l>
<l>erosion1 (RegionDilation1, Circle, RegionErosion1, 4*2)</l>
<l>dilation1 (RegionErosion1, Circle, RegionDilation2, 4)</l>
<c></c>
<l>connection (RegionDilation2, ConnectedRegions)</l>
<l>rectangularity (ConnectedRegions, Rectangularity)</l>
<l>select_shape (ConnectedRegions, SelectedReq, 'rectangularity', 'and', 0.95, 1)</l>
<l>select_shape (SelectedReq, SelectedReqSized, 'area', 'and', 2000, 99999)</l>
<l>elliptic_axis (SelectedReqSized, Ra, Rb, Phi)</l>
<c></c>
<l>* orientation_region (SelectedReqSized, Phi)</l>
<l>area_center (SelectedReqSized, Area, Row, Column)</l>
<c></c>
<c></c>
<l>dev_clear_window ()</l>
<l>dev_display (Image)</l>
<l>dev_set_color ('cyan')</l>
<l>* dev_display (SelectedReqSized)</l>
<c></c>
<l>dev_set_color ('red')</l>
<l>arrow_length:= 100</l>
<l>PhiC:= Phi - 1.5707</l>
<c></c>
<l>tuple_cos (PhiC, Cos)</l>
<l>tuple_sin(PhiC,Sin)</l>
<l>disp_arrow (600, Row, Column, Row+ arrow_length * Cos, Column + arrow_length * Sin, 2)</l>
<l>dev_set_color ('orange')</l>
<l>disp_line (600, Row, Column, Row + 50, Column )</l>
<l>disp_line (600, Row, Column, Row, Column  + 50)</l>
<l>* gen_circle_contour_xld (ContCircleTilt, Row, Column, 50, 0, Phi - 1.5707, 'positive', 1)</l>
<l>* disp_arc (600, Row + 50, Column, Phi + 1.5707,  Row+ arrow_length * Cos, Column + arrow_length * Sin)</l>
<l>arc := -3.1415 - Phi</l>
<l>disp_arc (600, Row, Column, arc , Row, Column + 50)</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
